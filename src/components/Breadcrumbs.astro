---
import { t } from "i18next";
import i18next from "../i18n/config";

const { lang = "hr" } = Astro.params;

// Change language before rendering
if (lang) {
    await i18next.changeLanguage(lang);
}

// Current path segments from URL
const currentUrl = Astro.url.pathname;
const segments = currentUrl.split('/').filter(segment => segment);

// Ignore language prefix
const pathSegments = segments.length > 0 && 
    Object.keys(i18next.languages || {}).includes(segments[0]) 
    ? segments.slice(1) 
    : segments;

// Build breadcrumbs
const breadcrumbs = [
    {
        name: "Home",
        url: `/${lang}`
    }
];

// Add each path segment as a breadcrumb
let currentPath = `/${lang}`;
pathSegments.forEach((segment) => {
    // Create a readable name from the path segment
    let displayName = segment.replace(/-/g, ' ');
    displayName = displayName.charAt(0).toUpperCase() + displayName.slice(1);
    
    // Add to breadcrumbs
    currentPath += `/${segment}`;
    breadcrumbs.push({
        name: displayName,
        url: currentPath
    });
});

// Get structured data for breadcrumbs
const breadcrumbsStructuredData = {
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    "itemListElement": breadcrumbs.map((breadcrumb, index) => ({
        "@type": "ListItem",
        "position": index + 1,
        "name": breadcrumb.name,
        "item": `https://solarfusion.hr${breadcrumb.url}`
    }))
};
---

<nav aria-label="Breadcrumbs" class="py-3 px-4 bg-gray-50">
    <ol class="flex items-center flex-wrap text-sm text-gray-600">
        {breadcrumbs.map((breadcrumb, index) => (
            <li class="flex items-center">
                {index > 0 && (
                    <span class="mx-2 text-gray-400">/</span>
                )}
                
                {index === breadcrumbs.length - 1 ? (
                    <span class="font-medium text-primary" aria-current="page">
                        {breadcrumb.name}
                    </span>
                ) : (
                    <a href={breadcrumb.url} class="hover:text-secondary transition-colors">
                        {breadcrumb.name}
                    </a>
                )}
            </li>
        ))}
    </ol>
</nav>

<!-- Structured Data for Breadcrumbs -->
<script type="application/ld+json">{JSON.stringify(breadcrumbsStructuredData)}</script> 